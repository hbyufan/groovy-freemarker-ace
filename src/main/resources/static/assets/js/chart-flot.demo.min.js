/*
 Template Name: Color Admin - Responsive Admin Dashboard Template build with Twitter Bootstrap 3.3.7
 Version: 2.1.0
 Author: Sean Ngu
 Website: http://www.seantheme.com/color-admin-v2.1/admin/html/
 */
var blue = "#348fe2", blueLight = "#5da5e8", blueDark = "#1993E4", aqua = "#49b6d6", aquaLight = "#6dc5de",
    aquaDark = "#3a92ab", green = "#00acac", greenLight = "#33bdbd", greenDark = "#008a8a", orange = "#f59c1a",
    orangeLight = "#f7b048", orangeDark = "#c47d15", dark = "#2d353c", grey = "#b6c2c9", purple = "#727cb6",
    purpleLight = "#8e96c5", purpleDark = "#5b6392", red = "#ff5b57", handleBasicChart = function () {
        "use strict";
        for (var a = [], b = 0; b < 2 * Math.PI; b += .25)a.push([b, Math.sin(b)]);
        for (var c = [], d = 0; d < 2 * Math.PI; d += .25)c.push([d, Math.cos(d)]);
        for (var e = [], f = 0; f < 2 * Math.PI; f += .1)e.push([f, Math.tan(f)]);
        0 !== $("#basic-chart").length && $.plot($("#basic-chart"), [{
            label: "data 1",
            data: a,
            color: purple,
            shadowSize: 0
        }, {label: "data 2", data: c, color: green, shadowSize: 0}, {
            label: "data 3",
            data: e,
            color: dark,
            shadowSize: 0
        }], {
            series: {lines: {show: !0}, points: {show: !1}},
            xaxis: {tickColor: "#ddd"},
            yaxis: {min: -2, max: 2, tickColor: "#ddd"},
            grid: {borderColor: "#ddd", borderWidth: 1}
        })
    }, handleStackedChart = function () {
        "use strict";
        function p(a, b, c) {
            $('<div id="tooltip" class="flot-tooltip">' + c + "</div>").css({
                top: b,
                left: a + 35
            }).appendTo("body").fadeIn(200)
        }

        for (var a = [], b = 0; b <= 5; b += 1)a.push([b, parseInt(5 * Math.random())]);
        for (var c = [], d = 0; d <= 5; d += 1)c.push([d, parseInt(5 * Math.random() + 5)]);
        for (var e = [], f = 0; f <= 5; f += 1)e.push([f, parseInt(5 * Math.random() + 5)]);
        for (var g = [], h = 0; h <= 5; h += 1)g.push([h, parseInt(5 * Math.random() + 5)]);
        for (var i = [], j = 0; j <= 5; j += 1)i.push([j, parseInt(5 * Math.random() + 5)]);
        for (var k = [], l = 0; l <= 5; l += 1)k.push([l, parseInt(5 * Math.random() + 5)]);
        var m = [[0, "Monday"], [1, "Tuesday"], [2, "Wednesday"], [3, "Thursday"], [4, "Friday"], [5, "Saturday"]], n = {
            xaxis: {tickColor: "transparent", ticks: m},
            yaxis: {tickColor: "#ddd", ticksLength: 10},
            grid: {hoverable: !0, tickColor: "#ccc", borderWidth: 0, borderColor: "rgba(0,0,0,0.2)"},
            series: {
                stack: !0,
                lines: {show: !1, fill: !1, steps: !1},
                bars: {show: !0, barWidth: .5, align: "center", fillColor: null},
                highlightColor: "rgba(0,0,0,0.8)"
            },
            legend: {show: !0, labelBoxBorderColor: "#ccc", position: "ne", noColumns: 1}
        }, o = [{data: a, color: purpleDark, label: "China", bars: {fillColor: purpleDark}}, {
            data: c,
            color: purple,
            label: "Russia",
            bars: {fillColor: purple}
        }, {data: e, color: purpleLight, label: "Canada", bars: {fillColor: purpleLight}}, {
            data: g,
            color: blueDark,
            label: "Japan",
            bars: {fillColor: blueDark}
        }, {data: i, color: blue, label: "USA", bars: {fillColor: blue}}, {
            data: k,
            color: blueLight,
            label: "Others",
            bars: {fillColor: blueLight}
        }];
        $.plot("#stacked-chart", o, n);
        var q = null, r = null;
        $("#stacked-chart").bind("plothover", function (a, b, c) {
            if (c) {
                var d = c.datapoint[1] - c.datapoint[2];
                q == c.series.label && d == r || (q = c.series.label, r = d, $("#tooltip").remove(), p(c.pageX, c.pageY, d + " " + c.series.label))
            } else $("#tooltip").remove(), q = null, r = null
        })
    }, handleTrackingChart = function () {
        "use strict";
        function d() {
            g = null;
            var a = h, b = e.getAxes();
            if (!(a.x < b.xaxis.min || a.x > b.xaxis.max || a.y < b.yaxis.min || a.y > b.yaxis.max)) {
                var c, d, i = e.getData();
                for (c = 0; c < i.length; ++c) {
                    var j = i[c];
                    for (d = 0; d < j.data.length && !(j.data[d][0] > a.x); ++d);
                    var k, l = j.data[d - 1], m = j.data[d];
                    k = null === l ? m[1] : null === m ? l[1] : l[1], f.eq(c).text(j.label.replace(/=.*/, "= " + k.toFixed(2)))
                }
            }
        }

        for (var a = [], b = [], c = 0; c < 14; c += .1)a.push([c, Math.sin(c)]), b.push([c, Math.cos(c)]);
        if (0 !== $("#tracking-chart").length) {
            var e = $.plot($("#tracking-chart"), [{data: a, label: "Series1", color: dark, shadowSize: 0}, {
                data: b,
                label: "Series2",
                color: red,
                shadowSize: 0
            }], {
                series: {lines: {show: !0}},
                crosshair: {mode: "x", color: grey},
                grid: {hoverable: !0, autoHighlight: !1, borderColor: "#ccc", borderWidth: 0},
                xaxis: {tickLength: 0},
                yaxis: {tickColor: "#ddd"},
                legend: {labelBoxBorderColor: "#ddd", backgroundOpacity: .4, color: "#fff", show: !0}
            }), f = $("#tracking-chart .legendLabel");
            f.each(function () {
                $(this).css("width", $(this).width())
            });
            var g = null, h = null;
            $("#tracking-chart").bind("plothover", function (a) {
                h = a, g || (g = setTimeout(d, 50))
            })
        }
    }, handleBarChart = function () {
        "use strict";
        if (0 !== $("#bar-chart").length) {
            var a = [["January", 10], ["February", 8], ["March", 4], ["April", 13], ["May", 17], ["June", 9]];
            $.plot("#bar-chart", [{data: a, color: purple}], {
                series: {
                    bars: {
                        show: !0,
                        barWidth: .4,
                        align: "center",
                        fill: !0,
                        fillColor: purple,
                        zero: !0
                    }
                }, xaxis: {mode: "categories", tickColor: "#ddd", tickLength: 0}, grid: {borderWidth: 0}
            })
        }
    }, handleInteractivePieChart = function () {
        "use strict";
        if (0 !== $("#interactive-pie-chart").length) {
            for (var a = [], b = 3, c = [purple, dark, grey], d = 0; d < b; d++)a[d] = {
                label: "Series" + (d + 1),
                data: Math.floor(100 * Math.random()) + 1,
                color: c[d]
            };
            $.plot($("#interactive-pie-chart"), a, {
                series: {pie: {show: !0}},
                grid: {hoverable: !0, clickable: !0},
                legend: {labelBoxBorderColor: "#ddd", backgroundColor: "none"}
            })
        }
    }, handleDonutChart = function () {
        "use strict";
        if (0 !== $("#donut-chart").length) {
            for (var a = [], b = 3, c = [dark, green, purple], d = ["Unique Visitor", "Bounce Rate", "Total Page Views", "Avg Time On Site", "% New Visits"], e = [20, 14, 12, 31, 23], f = 0; f < b; f++)a[f] = {
                label: d[f],
                data: e[f],
                color: c[f]
            };
            $.plot($("#donut-chart"), a, {
                series: {
                    pie: {
                        innerRadius: .5,
                        show: !0,
                        combine: {color: "#999", threshold: .1}
                    }
                }, grid: {borderWidth: 0, hoverable: !0, clickable: !0}, legend: {show: !1}
            })
        }
    }, handleInteractiveChart = function () {
        "use strict";
        function e(e, t, n) {
            $('<div id="tooltip" class="flot-tooltip">' + n + "</div>").css({
                top: t - 45,
                left: e - 55
            }).appendTo("body").fadeIn(200)
        }

        if ($("#interactive-chart").length !== 0) {
            var t = [[1, 40], [2, 50], [3, 60], [4, 60], [5, 60]];
            var n = [[1, 10], [2, 6], [3, 10], [4, 12], [5, 18]];
            var ce = [[1, 80], [2, 23], [3, 45], [4, 4], [5, 18]];
            var r = [[1, "客户数"], [2, "新增客户数"], [3, "流失客户数"], [4, "赢回客户数"], [5, "客户留存率"]];
            $.plot($("#interactive-chart"), [{
                data: t,
                label: "个险客户",
                color: blue,
                lines: {show: true, fill: false, lineWidth: 2},
                points: {show: true, radius: 3, fillColor: "#fff"},
                shadowSize: 0
            }, {
                data: n,
                label: "团险客户",
                color: green,
                lines: {show: true, fill: false, lineWidth: 2},
                points: {show: true, radius: 3, fillColor: "#fff"},
                shadowSize: 0
            },{
                data: ce,
                label: "客户合计",
                color: aqua,
                lines: {show: true, fill: false, lineWidth: 2},
                points: {show: true, radius: 3, fillColor: "#fff"},
                shadowSize: 0
            }], {
                xaxis: {ticks: r, tickDecimals: 0, tickColor: "#ddd"},
                yaxis: {ticks: 10, tickColor: "#ddd", min: 0, max: 100},
                grid: {
                    hoverable: true,
                    clickable: true,
                    tickColor: "#ddd",
                    borderWidth: 1,
                    backgroundColor: "#fff",
                    borderColor: "#ddd"
                },
                legend: {labelBoxBorderColor: "#ddd", margin: 10, noColumns: 1, show: true}
            });
            var i = null;
            $("#interactive-chart").bind("plothover", function (t, n, r) {
                $("#x").text(n.x.toFixed(2));
                $("#y").text(n.y.toFixed(2));
                if (r) {
                    if (i !== r.dataIndex) {
                        i = r.dataIndex;
                        $("#tooltip").remove();
                        var s = r.datapoint[1].toFixed(2);
                        var o = r.series.label + " " + s;
                        e(r.pageX, r.pageY, o)
                    }
                } else {
                    $("#tooltip").remove();
                    i = null
                }
                t.preventDefault()
            })
        }
    }, handleLiveUpdatedChart = function () {
        "use strict";
        function a() {
            g.setData([b()]), g.draw(), setTimeout(a, e)
        }

        function b() {
            for (c.length > 0 && (c = c.slice(1)); c.length < d;) {
                var a = c.length > 0 ? c[c.length - 1] : 50, b = a + 10 * Math.random() - 5;
                b < 0 && (b = 0), b > 100 && (b = 100), c.push(b)
            }
            for (var e = [], f = 0; f < c.length; ++f)e.push([f, c[f]]);
            return e
        }

        if (0 !== $("#live-updated-chart").length) {
            var c = [], d = 150, e = 1e3;
            $("#updateInterval").val(e).change(function () {
                var a = $(this).val();
                a && !isNaN(+a) && (e = +a, e < 1 && (e = 1), e > 2e3 && (e = 2e3), $(this).val("" + e))
            });
            var f = {
                series: {shadowSize: 0, color: purple, lines: {show: !0, fill: !0}},
                yaxis: {min: 0, max: 100, tickColor: "#ddd"},
                xaxis: {show: !0, tickColor: "#ddd"},
                grid: {borderWidth: 1, borderColor: "#ddd"}
            }, g = $.plot($("#live-updated-chart"), [b()], f);
            a()
        }
    }, Chart = function () {
        "use strict";
        return {
            init: function () {
                //handleBasicChart(), handleStackedChart(), handleTrackingChart(), handleBarChart(), handleInteractivePieChart(), handleDonutChart(),
                handleInteractiveChart()
                //, handleLiveUpdatedChart()
            }
        }
    }();